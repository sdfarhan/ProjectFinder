{"version":3,"sources":["components/layout/SingedinLinks.js","store/actions/authActions.js","components/layout/SingedoutLinks.js","components/layout/Navbar.js","components/Dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/Dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","config/fbConfig.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","to","onClick","className","profile","initials","SingedoutLinks","Navbar","this","links","uid","data-target","isLoaded","class","id","Component","state","firebase","Notifacations","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","Notifications","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","comp","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignOut","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","SignUp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3a44a55b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\nfunction SingedinLinks(props) {\r\n    return (\r\n        <>\r\n            <li><Link to='/createproject'>New Project</Link></li>\r\n            <li><Link to='/signin' onClick={props.signOut}>Log Out</Link></li>\r\n            <li><Link to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</Link></li>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut : () => dispatch(signOut())\r\n    } \r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SingedinLinks)\r\n","\r\n\r\nexport const signIn = (credentials) =>{\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then( () => {\r\n            dispatch( {type: 'LOGIN_SUCCESS'} )\r\n        }).catch( (err) =>{\r\n            dispatch( {type: 'LOGIN_ERROR', err} )\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then( () => {\r\n            dispatch( {type: 'SIGNOUT_SUCCESS'} );\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then( (resp) => {\r\n           return firestore.collection('users').doc(resp.user.uid).set({\r\n               firstName: newUser.firstName,\r\n               lastName: newUser.lastName,\r\n               initials: newUser.firstName[0] + newUser.lastName[0]\r\n           })\r\n        }).then( () =>{\r\n            dispatch({type: \"SIGNUP_SUCCESS\"})\r\n        }).catch( (err) => {\r\n            dispatch({type: \"SIGNUP_ERROR\", err})\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction SingedoutLinks() {\r\n    return (\r\n        <>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingedoutLinks","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SingedinLinks from './SingedinLinks';\r\nimport SingedoutLinks from './SingedoutLinks';\r\nimport { connect } from 'react-redux';\r\nimport { isLoaded } from 'react-redux-firebase';\r\n\r\nclass Navbar extends Component{\r\n    render(){\r\n        const { auth, profile } = this.props; \r\n        const links = auth.uid ? <SingedinLinks profile={profile}/> : <SingedoutLinks/>;\r\n        return (\r\n            <>\r\n                <nav className=\" grey darken-3\">\r\n                    <div className=\"nav-wrapper\">\r\n                        <div  className=\"container\">\r\n                            <Link to='/' className=\"brand-logo\">Project Finder</Link>\r\n                            <Link to='#' data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></Link>\r\n                            <ul className=\"right hide-on-med-and-down\">\r\n                                {isLoaded(auth) && links}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <ul class=\"sidenav\" id=\"mobile-demo\">\r\n                    {isLoaded(auth) && links}\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nfunction Notifacations(props) {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0 blue-grey darken-1\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>                           \r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifacations\r\n    ","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nfunction ProjectSummary({project}) {\r\n    return (\r\n        <div className=\"card z-depth-0 blue-grey darken-1 project-summary\">\r\n            <div className=\"card-content white-text\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName + ' '+ project.authorLastName}</p>\r\n                    <p>{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from '../projects/ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction ProjectList({projects}) {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return (\r\n                    <Link to={\"/project/\" + project.id } key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class Dashboard extends Component {\r\n    \r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return  <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                 <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                         <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications:  state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\r\n    ]),\r\n    connect(mapStateToProps)\r\n    )(Dashboard)\r\n// export default connect(mapStateToProps)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction ProjectDetails({ project, auth }) {\r\n\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if(project){\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content grey-text\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                            <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <div>Created By {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>12th August</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <h5>Loading Project Details</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;  \r\n    return {\r\n        project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(() => ['projects']),\r\n    connect(mapStateToProps)\r\n    )(ProjectDetails)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isLoaded } from 'react-redux-firebase';\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        \r\n        const comp = auth.uid ? <Redirect to='/' /> :  \r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text darken-3\">SignIn</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\" >Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\" >Password </label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                </div>\r\n                <div className=\"red-text center\">\r\n                    { authError ? <p>{authError}</p> : null }\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        return (\r\n            <>\r\n                { isLoaded(auth) && comp }\r\n            </> \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn : (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux' \r\nimport { Redirect } from 'react-router-dom';\r\nimport { isLoaded } from 'react-redux-firebase';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignOut extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n\r\n        const comp = auth.uid ? <Redirect to='/' /> :\r\n        <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\" >First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\" >\r\n                        <label htmlFor=\"lastName\" >Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\" >Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\" >Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{authError}</p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        \r\n        return (\r\n            <>\r\n                { isLoaded(auth) && comp }\r\n            </>      \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError : state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignOut)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return  <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\" >Project Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\" >Last Name</label>\r\n                        <textarea  id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createProject: project => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => { \r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore  = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then( () =>{\r\n            dispatch({type : 'CREATE_PROJECT', project});\r\n        }).catch( (err) =>{\r\n            dispatch({type : 'CREATE_PROJECT_ERR', err});\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/Signin' component={SignIn} />\n          <Route path='/Signup' component={SignUp} />\n          <Route path='/createproject' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA76wVQGAw1ZkS5_zIa4ArSBck9lhtXWWA\",\r\n    authDomain: \"projectfinder-5ee37.firebaseapp.com\",\r\n    databaseURL: \"https://projectfinder-5ee37.firebaseio.com\",\r\n    projectId: \"projectfinder-5ee37\",\r\n    storageBucket: \"projectfinder-5ee37.appspot.com\",\r\n    messagingSenderId: \"28554920254\",\r\n    appId: \"1:28554920254:web:54334c29a061a8f2636c6f\",\r\n    measurementId: \"G-2Q153EJXYM\"\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return{\r\n                ...state,\r\n                authError: 'login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.message.err\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n","const initState = {\r\n    projects : [\r\n        {\r\n            id: '1',\r\n            title: 'Visualization of data structures',\r\n            content: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Doloremque molestiae, beatae eum, sunt in aperiam ipsam ex ratione et fuga delectus perferendis cum totam consequuntur, quod animi repudiandae qui. Cum!'\r\n        },\r\n        {\r\n            id: '2',\r\n            title: 'Todo-App',\r\n            content: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Doloremque molestiae, beatae eum, sunt in aperiam ipsam ex ratione et fuga delectus perferendis cum totam consequuntur, quod animi repudiandae qui. Cum!'\r\n        },\r\n        {\r\n            id: '3',\r\n            title: 'Blog Writer',\r\n            content: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Doloremque molestiae, beatae eum, sunt in aperiam ipsam ex ratione et fuga delectus perferendis cum totam consequuntur, quod animi repudiandae qui. Cum!'\r\n        }\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('project crated', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERR':\r\n            console.log('project creation error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport fbConfig from './config/fbConfig'\nimport * as serviceWorker from './serviceWorker';\nimport {  createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\n\nconst store = createStore(rootReducer, \n  compose( \n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: 'true'})\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}